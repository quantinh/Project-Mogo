//mixin width và height 
@mixin size($width, $height: $width) {
	width: $width;
	height: $height;
}
//mixin absolute center direction là hướng 
@mixin absoluteCenter($direction: "left") {
	position: absolute;
	@if $direction == "left" {
		left: 50%;
		transform: translateX(-50%);
	}
	@if $direction == "top" {
		top: 50%;
		transform: translateY(-50%);
	}
	@if $direction == "both" {
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}
}
//mixin background color
@mixin bg($color: red) {
	background-color: $color;
}
//mixin absolute full 
@mixin absoluteFull() {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}
//mixin flex box 
@mixin flexBox($align-items: stretch, $justify-content: flex-start, $flex-direction: row, $flex: flex, $flex-wrap: nowrap) {
	display: $flex;
	align-items: $align-items;
	justify-content: $justify-content;
	flex-direction: $flex-direction;
	flex-wrap: $flex-wrap;
}
//mixin maxWidth responsive
@mixin maxWidth ($breakpoints) {
	@media screen and (max-width: $breakpoints) { 
		@content;
	}
} 
//mixin minWidth responsive
@mixin minWidth ($breakpoints) {
	@media screen and (min-width: $breakpoints) { 
		@content;
	}
} 
//mixin hidesroll
@mixin hideScroll() {
	-ms-overflow-style: none;
	scrollbar-width: none;
	&::-webkit-scrollbar {
		display: none;
	}
}
//mixin text clamp, row(số dòng)
@mixin textClamp($rows: 1, $size: 100%) {
	display: -webkit-box;
	-webkit-line-clamp: $rows;
	-webkit-box-orient:vertical;
	overflow: hidden;
	text-overflow: ellipsis;
	width: $size;
	max-width: $size;
	white-space: pre-wrap;
	word-break: break-word;
}
//mixin ve hieu ung hover tham so truyen vao la 1 class
@mixin hoverEffect($itemClass, $contentClass, $transform: "true") {
	#{$itemClass} {
		position: relative;
		z-index: 1;
		transition: transform 0.25s linear;
		will-change: transform;
		& > * {
			transition: transform 0.25s linear;
			will-change: transform;
		}
		#{$contentClass} {
			@include absoluteFull();
			@include flexBox(center, center, column);
			opacity: 0;
			visibility: hidden;
			transition: all 0.25s linear;
			background: linear-gradient(to bottom, rgba($primary-color, 0.8), rgba($secondary-color, 0.8));
			z-index: 2;
		}
		@if $transform == "true" {
			&:after {
				content: "";
				@include absoluteFull();
				@include bg($third-color);
				// transition: transform 0.25s linear;
				// will-change: transform; /* Sử dụng báo cho duyệt biết để ko bị giật thuộc tính */
				z-index: -1;
			}
		}
		&:hover {
			#{$contentClass} {
				opacity: 1;
				visibility: visible;
			}
			@if $transform == "true" {
				& > * {
					transform: translate(-1rem, -1rem);
				}
				// transform: translate(-1rem, -1rem);
				// &:after {
				// 	transform: translate(1rem, 1rem);
				// }
			}
		}
	}
}
//mixin chạm slider tren mobile 
@mixin touchSlider($width: 80%, $gap: 2.5rem, $padding: 1rem) {
	display: grid !important;
	justify-content: flex-start !important;
	// tạo scroll theo hàng ngang trên điện thoại 
	grid-auto-columns: $width;
	grid-auto-flow: column;
	//Một cột trên grid để 100%
	grid-template-columns: unset;
	grid-column-gap: $gap;
	overflow-x: auto;
	padding: $padding;
	scroll-snap-type: x mandatory; /*kéo qua mượt hơn trên mobile*/
	scroll-snap-stop: always; /*lướt theo từng nất không lướt cái vèo qua*/
	@include hideScroll;
	& > * {
		scroll-snap-align: start; /*lướt qua thì nó canh theo đường biên phải không lệch ảnh khi kéo*/
		width: auto;
	}
}
//mixin tối ưu sử dụng thay đổi màu chữ text sử dụng object
// @mixin color($config: ()) {
// 	$config: extend(
// 		(
// 			color: white,
// 		),
// 		$config
// 	);
// 	color: map-get($config, color);
// }
// mixin flex box sử dụng object
// @mixin flexBox2($config: ()) {
// 	$config: extend(
// 		(
// 			align-items: stretch, 
// 			justify-content: flex-start, 
// 			flex-direction: row, 
// 			display: flex, 
// 			flex-wrap: nowrap
// 		),
// 		$config
// 	);
// 	display: map-get($config, display);
// 	align-items: map-get($config, align-items);
// 	justify-content: map-get($config, justify-content);
// 	flex-direction: map-get($config, flex-direction);
// 	flex-wrap: map-get($config, flex-wrap);
// }